TASK_RSTEN;
TASK_RST;
// write input layer into LB

TASK_INIT_WRITE_MULTICHIP_INPUT;
index_data_array = 0;
chip_active = 0;
TASK_LBWR(16'h0000);
TASK_LBWR(16'h0001);
TASK_LBWR(16'h0002);
TASK_LBWR(16'h0003);
TASK_LBWR(16'h0004);
TASK_LBWR(16'h0005);
TASK_LBWR(16'h0006);
TASK_LBWR(16'h0007);
TASK_LBWR(16'h0008);
TASK_LBWR(16'h0009);

TASK_INIT_WRITE_MULTICHIP_INPUT;
index_data_array = 0;
chip_active = 1;
TASK_LBWR(16'h0000);
TASK_LBWR(16'h0001);
TASK_LBWR(16'h0002);
TASK_LBWR(16'h0003);
TASK_LBWR(16'h0004);
TASK_LBWR(16'h0005);
TASK_LBWR(16'h0006);
TASK_LBWR(16'h0007);
TASK_LBWR(16'h0008);
TASK_LBWR(16'h0009);

TASK_INIT_WRITE_MULTICHIP_INPUT;
index_data_array = 0;
chip_active = 2;
TASK_LBWR(16'h0000);
TASK_LBWR(16'h0001);
TASK_LBWR(16'h0002);
TASK_LBWR(16'h0003);
TASK_LBWR(16'h0004);
TASK_LBWR(16'h0005);
TASK_LBWR(16'h0006);
TASK_LBWR(16'h0007);
TASK_LBWR(16'h0008);
TASK_LBWR(16'h0009);

index_data_array = 0;
TASK_INIT_WRITE_MULTICHIP_WEIGHTS(0);
chip_active = 0;
// weights for chip 0 on layer 0
TASK_PP(16'h0000,4);
TASK_PP(16'h0001,4);
TASK_PP(16'h0002,4);
TASK_PP(16'h0003,4);
TASK_PP(16'h0004,4);
TASK_PP(16'h0005,4);
TASK_PP(16'h0006,4);
TASK_PP(16'h0007,4);
TASK_PP(16'h0008,4);
TASK_PP(16'h0009,4);
TASK_PP(16'h000A,4);
TASK_PP(16'h000B,4);
TASK_PP(16'h000C,4);
TASK_PP(16'h000D,4);
TASK_PP(16'h000E,4);
TASK_PP(16'h000F,4);
TASK_PP(16'h0010,4);
TASK_PP(16'h0011,4);
TASK_PP(16'h0012,4);
TASK_PP(16'h0013,4);
TASK_PP(16'h0014,4);
TASK_PP(16'h0015,4);
TASK_PP(16'h0016,4);
TASK_PP(16'h0017,4);
TASK_PP(16'h0018,4);
TASK_PP(16'h0019,4);
TASK_PP(16'h001A,4);
TASK_PP(16'h001B,4);
TASK_PP(16'h001C,4);
TASK_PP(16'h001D,4);
TASK_PP(16'h001E,4);
TASK_PP(16'h001F,4);
TASK_PP(16'h0020,4);
TASK_PP(16'h0021,4);
TASK_PP(16'h0022,4);
TASK_PP(16'h0023,4);
TASK_PP(16'h0024,4);
TASK_PP(16'h0025,4);
TASK_PP(16'h0026,4);
TASK_PP(16'h0027,4);
TASK_PP(16'h0028,4);
TASK_PP(16'h0029,4);
TASK_PP(16'h002A,4);
TASK_PP(16'h002B,4);
TASK_PP(16'h002C,4);
TASK_PP(16'h002D,4);
TASK_PP(16'h002E,4);
TASK_PP(16'h002F,4);
TASK_PP(16'h0030,4);
TASK_PP(16'h0031,4);
TASK_PP(16'h0032,4);
TASK_PP(16'h0033,4);
TASK_PP(16'h0034,4);
TASK_PP(16'h0035,4);
TASK_PP(16'h0036,4);
TASK_PP(16'h0037,4);
TASK_PP(16'h0038,4);
TASK_PP(16'h0039,4);
TASK_PP(16'h003A,4);
TASK_PP(16'h003B,4);
TASK_PP(16'h003C,4);
TASK_PP(16'h003D,4);
TASK_PP(16'h003E,4);
TASK_PP(16'h003F,4);
TASK_PP(16'h0040,4);
TASK_PP(16'h0041,4);
TASK_PP(16'h0042,4);
TASK_PP(16'h0043,4);
TASK_PP(16'h0044,4);
TASK_PP(16'h0045,4);
TASK_PP(16'h0046,4);
TASK_PP(16'h0047,4);
TASK_PP(16'h0048,4);
TASK_PP(16'h0049,4);
TASK_PP(16'h004A,4);
TASK_PP(16'h004B,4);
TASK_PP(16'h004C,4);
TASK_PP(16'h004D,4);
TASK_PP(16'h004E,4);
TASK_PP(16'h004F,4);

TASK_INIT_WRITE_MULTICHIP_WEIGHTS(0);
chip_active = 0;
// weights for chip 0 on layer 1
TASK_PP(16'h0050,4);
TASK_PP(16'h0051,4);
TASK_PP(16'h0052,4);
TASK_PP(16'h0053,4);
TASK_PP(16'h0054,4);
TASK_PP(16'h0055,4);
TASK_PP(16'h0056,4);
TASK_PP(16'h0057,4);
TASK_PP(16'h0058,4);
TASK_PP(16'h0059,4);
TASK_PP(16'h005A,4);
TASK_PP(16'h005B,4);
TASK_PP(16'h005C,4);
TASK_PP(16'h005D,4);
TASK_PP(16'h005E,4);
TASK_PP(16'h005F,4);
TASK_PP(16'h0060,4);
TASK_PP(16'h0061,4);
TASK_PP(16'h0062,4);
TASK_PP(16'h0063,4);
TASK_PP(16'h0064,4);
TASK_PP(16'h0065,4);
TASK_PP(16'h0066,4);
TASK_PP(16'h0067,4);
TASK_PP(16'h0068,4);
TASK_PP(16'h0069,4);
TASK_PP(16'h006A,4);
TASK_PP(16'h006B,4);
TASK_PP(16'h006C,4);
TASK_PP(16'h006D,4);
TASK_PP(16'h006E,4);
TASK_PP(16'h006F,4);
TASK_PP(16'h0070,4);
TASK_PP(16'h0071,4);
TASK_PP(16'h0072,4);
TASK_PP(16'h0073,4);
TASK_PP(16'h0074,4);
TASK_PP(16'h0075,4);
TASK_PP(16'h0076,4);
TASK_PP(16'h0077,4);
TASK_PP(16'h0078,4);
TASK_PP(16'h0079,4);
TASK_PP(16'h007A,4);
TASK_PP(16'h007B,4);
TASK_PP(16'h007C,4);

TASK_INIT_WRITE_MULTICHIP_WEIGHTS(0);
chip_active = 0;
// weights for chip 0 on layer 2
TASK_PP(16'h007D,4);
TASK_PP(16'h007E,4);
TASK_PP(16'h007F,4);
TASK_PP(16'h0080,4);
TASK_PP(16'h0081,4);
TASK_PP(16'h0082,4);
TASK_PP(16'h0083,4);
TASK_PP(16'h0084,4);
TASK_PP(16'h0085,4);
TASK_PP(16'h0086,4);
TASK_PP(16'h0087,4);
TASK_PP(16'h0088,4);
TASK_PP(16'h0089,4);
TASK_PP(16'h008A,4);
TASK_PP(16'h008B,4);
TASK_PP(16'h008C,4);
TASK_PP(16'h008D,4);
TASK_PP(16'h008E,4);
TASK_PP(16'h008F,4);
TASK_PP(16'h0090,4);
TASK_PP(16'h0091,4);
TASK_PP(16'h0092,4);
TASK_PP(16'h0093,4);
TASK_PP(16'h0094,4);
TASK_PP(16'h0095,4);
TASK_PP(16'h0096,4);
TASK_PP(16'h0097,4);
TASK_PP(16'h0098,4);
TASK_PP(16'h0099,4);
TASK_PP(16'h009A,4);
TASK_PP(16'h009B,4);
TASK_PP(16'h009C,4);
TASK_PP(16'h009D,4);
TASK_PP(16'h009E,4);
TASK_PP(16'h009F,4);
TASK_PP(16'h00A0,4);
TASK_PP(16'h00A1,4);
TASK_PP(16'h00A2,4);
TASK_PP(16'h00A3,4);
TASK_PP(16'h00A4,4);
TASK_PP(16'h00A5,4);
TASK_PP(16'h00A6,4);
TASK_PP(16'h00A7,4);
TASK_PP(16'h00A8,4);
TASK_PP(16'h00A9,4);
TASK_PP(16'h00AA,4);
TASK_PP(16'h00AB,4);
TASK_PP(16'h00AC,4);

TASK_INIT_WRITE_MULTICHIP_WEIGHTS(0);
chip_active = 0;
// weights for chip 0 on layer 3
TASK_PP(16'h00AD,4);
TASK_PP(16'h00AE,4);
TASK_PP(16'h00AF,4);
TASK_PP(16'h00B0,4);
TASK_PP(16'h00B1,4);
TASK_PP(16'h00B2,4);
TASK_PP(16'h00B3,4);
TASK_PP(16'h00B4,4);
TASK_PP(16'h00B5,4);
TASK_PP(16'h00B6,4);
TASK_PP(16'h00B7,4);
TASK_PP(16'h00B8,4);
TASK_PP(16'h00B9,4);
TASK_PP(16'h00BA,4);
TASK_PP(16'h00BB,4);
TASK_PP(16'h00BC,4);
TASK_PP(16'h00BD,4);
TASK_PP(16'h00BE,4);
TASK_PP(16'h00BF,4);
TASK_PP(16'h00C0,4);
TASK_PP(16'h00C1,4);
TASK_PP(16'h00C2,4);
TASK_PP(16'h00C3,4);
TASK_PP(16'h00C4,4);
TASK_PP(16'h00C5,4);
TASK_PP(16'h00C6,4);
TASK_PP(16'h00C7,4);
TASK_PP(16'h00C8,4);
TASK_PP(16'h00C9,4);
TASK_PP(16'h00CA,4);
TASK_PP(16'h00CB,4);
TASK_PP(16'h00CC,4);
TASK_PP(16'h00CD,4);
TASK_PP(16'h00CE,4);
TASK_PP(16'h00CF,4);
TASK_PP(16'h00D0,4);
TASK_PP(16'h00D1,4);
TASK_PP(16'h00D2,4);
TASK_PP(16'h00D3,4);
TASK_PP(16'h00D4,4);
TASK_PP(16'h00D5,4);
TASK_PP(16'h00D6,4);
TASK_PP(16'h00D7,4);
TASK_PP(16'h00D8,4);
TASK_PP(16'h00D9,4);
TASK_PP(16'h00DA,4);
TASK_PP(16'h00DB,4);
TASK_PP(16'h00DC,4);

index_data_array = 0;
TASK_INIT_WRITE_MULTICHIP_WEIGHTS(1);
chip_active = 1;
// weights for chip 1 on layer 0
TASK_PP(16'h0000,4);
TASK_PP(16'h0001,4);
TASK_PP(16'h0002,4);
TASK_PP(16'h0003,4);
TASK_PP(16'h0004,4);
TASK_PP(16'h0005,4);
TASK_PP(16'h0006,4);
TASK_PP(16'h0007,4);
TASK_PP(16'h0008,4);
TASK_PP(16'h0009,4);
TASK_PP(16'h000A,4);
TASK_PP(16'h000B,4);
TASK_PP(16'h000C,4);
TASK_PP(16'h000D,4);
TASK_PP(16'h000E,4);
TASK_PP(16'h000F,4);
TASK_PP(16'h0010,4);
TASK_PP(16'h0011,4);
TASK_PP(16'h0012,4);
TASK_PP(16'h0013,4);
TASK_PP(16'h0014,4);
TASK_PP(16'h0015,4);
TASK_PP(16'h0016,4);
TASK_PP(16'h0017,4);
TASK_PP(16'h0018,4);
TASK_PP(16'h0019,4);
TASK_PP(16'h001A,4);
TASK_PP(16'h001B,4);
TASK_PP(16'h001C,4);
TASK_PP(16'h001D,4);
TASK_PP(16'h001E,4);
TASK_PP(16'h001F,4);
TASK_PP(16'h0020,4);
TASK_PP(16'h0021,4);
TASK_PP(16'h0022,4);
TASK_PP(16'h0023,4);
TASK_PP(16'h0024,4);
TASK_PP(16'h0025,4);
TASK_PP(16'h0026,4);
TASK_PP(16'h0027,4);
TASK_PP(16'h0028,4);
TASK_PP(16'h0029,4);
TASK_PP(16'h002A,4);
TASK_PP(16'h002B,4);
TASK_PP(16'h002C,4);
TASK_PP(16'h002D,4);
TASK_PP(16'h002E,4);
TASK_PP(16'h002F,4);
TASK_PP(16'h0030,4);
TASK_PP(16'h0031,4);
TASK_PP(16'h0032,4);
TASK_PP(16'h0033,4);
TASK_PP(16'h0034,4);
TASK_PP(16'h0035,4);
TASK_PP(16'h0036,4);
TASK_PP(16'h0037,4);
TASK_PP(16'h0038,4);
TASK_PP(16'h0039,4);
TASK_PP(16'h003A,4);
TASK_PP(16'h003B,4);
TASK_PP(16'h003C,4);
TASK_PP(16'h003D,4);
TASK_PP(16'h003E,4);
TASK_PP(16'h003F,4);
TASK_PP(16'h0040,4);
TASK_PP(16'h0041,4);
TASK_PP(16'h0042,4);
TASK_PP(16'h0043,4);
TASK_PP(16'h0044,4);
TASK_PP(16'h0045,4);

TASK_INIT_WRITE_MULTICHIP_WEIGHTS(1);
chip_active = 1;
// weights for chip 1 on layer 1
TASK_PP(16'h0046,4);
TASK_PP(16'h0047,4);
TASK_PP(16'h0048,4);
TASK_PP(16'h0049,4);
TASK_PP(16'h004A,4);
TASK_PP(16'h004B,4);
TASK_PP(16'h004C,4);
TASK_PP(16'h004D,4);
TASK_PP(16'h004E,4);
TASK_PP(16'h004F,4);
TASK_PP(16'h0050,4);
TASK_PP(16'h0051,4);
TASK_PP(16'h0052,4);
TASK_PP(16'h0053,4);
TASK_PP(16'h0054,4);
TASK_PP(16'h0055,4);
TASK_PP(16'h0056,4);
TASK_PP(16'h0057,4);
TASK_PP(16'h0058,4);
TASK_PP(16'h0059,4);
TASK_PP(16'h005A,4);
TASK_PP(16'h005B,4);
TASK_PP(16'h005C,4);
TASK_PP(16'h005D,4);
TASK_PP(16'h005E,4);
TASK_PP(16'h005F,4);
TASK_PP(16'h0060,4);
TASK_PP(16'h0061,4);
TASK_PP(16'h0062,4);
TASK_PP(16'h0063,4);
TASK_PP(16'h0064,4);
TASK_PP(16'h0065,4);
TASK_PP(16'h0066,4);
TASK_PP(16'h0067,4);
TASK_PP(16'h0068,4);
TASK_PP(16'h0069,4);
TASK_PP(16'h006A,4);
TASK_PP(16'h006B,4);
TASK_PP(16'h006C,4);
TASK_PP(16'h006D,4);
TASK_PP(16'h006E,4);
TASK_PP(16'h006F,4);
TASK_PP(16'h0070,4);
TASK_PP(16'h0071,4);
TASK_PP(16'h0072,4);

TASK_INIT_WRITE_MULTICHIP_WEIGHTS(1);
chip_active = 1;
// weights for chip 1 on layer 2
TASK_PP(16'h0073,4);
TASK_PP(16'h0074,4);
TASK_PP(16'h0075,4);
TASK_PP(16'h0076,4);
TASK_PP(16'h0077,4);
TASK_PP(16'h0078,4);
TASK_PP(16'h0079,4);
TASK_PP(16'h007A,4);
TASK_PP(16'h007B,4);
TASK_PP(16'h007C,4);
TASK_PP(16'h007D,4);
TASK_PP(16'h007E,4);
TASK_PP(16'h007F,4);
TASK_PP(16'h0080,4);
TASK_PP(16'h0081,4);
TASK_PP(16'h0082,4);
TASK_PP(16'h0083,4);
TASK_PP(16'h0084,4);
TASK_PP(16'h0085,4);
TASK_PP(16'h0086,4);
TASK_PP(16'h0087,4);
TASK_PP(16'h0088,4);
TASK_PP(16'h0089,4);
TASK_PP(16'h008A,4);
TASK_PP(16'h008B,4);
TASK_PP(16'h008C,4);
TASK_PP(16'h008D,4);
TASK_PP(16'h008E,4);
TASK_PP(16'h008F,4);
TASK_PP(16'h0090,4);
TASK_PP(16'h0091,4);
TASK_PP(16'h0092,4);
TASK_PP(16'h0093,4);
TASK_PP(16'h0094,4);
TASK_PP(16'h0095,4);
TASK_PP(16'h0096,4);
TASK_PP(16'h0097,4);
TASK_PP(16'h0098,4);
TASK_PP(16'h0099,4);
TASK_PP(16'h009A,4);
TASK_PP(16'h009B,4);
TASK_PP(16'h009C,4);
TASK_PP(16'h009D,4);
TASK_PP(16'h009E,4);
TASK_PP(16'h009F,4);
TASK_PP(16'h00A0,4);
TASK_PP(16'h00A1,4);
TASK_PP(16'h00A2,4);

index_data_array = 0;
TASK_INIT_WRITE_MULTICHIP_WEIGHTS(2);
chip_active = 2;
// weights for chip 2 on layer 1
TASK_PP(16'h0000,4);
TASK_PP(16'h0001,4);
TASK_PP(16'h0002,4);
TASK_PP(16'h0003,4);
TASK_PP(16'h0004,4);
TASK_PP(16'h0005,4);
TASK_PP(16'h0006,4);
TASK_PP(16'h0007,4);
TASK_PP(16'h0008,4);
TASK_PP(16'h0009,4);
TASK_PP(16'h000A,4);
TASK_PP(16'h000B,4);
TASK_PP(16'h000C,4);
TASK_PP(16'h000D,4);
TASK_PP(16'h000E,4);
TASK_PP(16'h000F,4);
TASK_PP(16'h0010,4);
TASK_PP(16'h0011,4);
TASK_PP(16'h0012,4);
TASK_PP(16'h0013,4);
TASK_PP(16'h0014,4);
TASK_PP(16'h0015,4);
TASK_PP(16'h0016,4);
TASK_PP(16'h0017,4);
TASK_PP(16'h0018,4);
TASK_PP(16'h0019,4);
TASK_PP(16'h001A,4);
TASK_PP(16'h001B,4);
TASK_PP(16'h001C,4);
TASK_PP(16'h001D,4);


// layer 0
chip_active = 0;
TASK_ACCRST;
TASK_MACCYC(0,32'h00000000);
TASK_MACCYC(0,32'h00010001);
TASK_MACCYC(0,32'h00020002);
TASK_MACCYC(0,32'h00030003);
TASK_MACCYC(0,32'h00040004);
TASK_MACCYC(0,32'h00050005);
TASK_MACCYC(0,32'h00060006);
TASK_MACCYC(0,32'h00070007);
TASK_MACCYC(0,32'h00080008);
TASK_MACCYC(0,32'h00090009);
TASK_BIASBUF(4,16'h000A);
TASK_NEURONACT(32'h000003F8);
TASK_NEURONACT(32'h000103F9);
TASK_NEURONACT(32'h000203FA);
TASK_NEURONACT(32'h000303FB);
TASK_ACCRST;
TASK_MACCYC(0,32'h000E0000);
TASK_MACCYC(0,32'h000F0001);
TASK_MACCYC(0,32'h00100002);
TASK_MACCYC(0,32'h00110003);
TASK_MACCYC(0,32'h00120004);
TASK_MACCYC(0,32'h00130005);
TASK_MACCYC(0,32'h00140006);
TASK_MACCYC(0,32'h00150007);
TASK_MACCYC(0,32'h00160008);
TASK_MACCYC(0,32'h00170009);
TASK_BIASBUF(4,16'h0018);
TASK_NEURONACT(32'h000003FC);
TASK_NEURONACT(32'h000103FD);
TASK_NEURONACT(32'h000203FE);
TASK_NEURONACT(32'h000303FF);
TASK_ACCRST;
chip_active = 1;
TASK_ACCRST;
TASK_MACCYC(0,32'h00000000);
TASK_MACCYC(0,32'h00010001);
TASK_MACCYC(0,32'h00020002);
TASK_MACCYC(0,32'h00030003);
TASK_MACCYC(0,32'h00040004);
TASK_MACCYC(0,32'h00050005);
TASK_MACCYC(0,32'h00060006);
TASK_MACCYC(0,32'h00070007);
TASK_MACCYC(0,32'h00080008);
TASK_MACCYC(0,32'h00090009);
TASK_BIASBUF(4,16'h000A);
TASK_NEURONACT(32'h000003F9);
TASK_NEURONACT(32'h000103FA);
TASK_NEURONACT(32'h000203FB);
TASK_NEURONACT(32'h000303FC);
TASK_ACCRST;

// layer 1
chip_active = 0;
TASK_ACCRST;
